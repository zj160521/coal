<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cm.dao.CalculateReportDao">
	
	<select id="getallbyday" resultType="com.cm.entity.vo.SensorReportVo">
		SELECT f.id dev_id,s.ip,s.devid,s.type,s.maxvalues,s.minvalue,s.avgvalue,s.maxtime,r.status,r.cnt,DATE_FORMAT(s.statistictime,'%Y-%m-%d 00:00:00') filltime FROM
		(SELECT a.ip,a.devid,a.type,a.maxvalues,a.minvalue,a.avgvalue,b.maxtime maxtime,b.statistictime FROM 
		(SELECT ip,sensorId devid,sensor_type type,MAX(maxvalues) maxvalues,MIN(minvalue) minvalue,AVG(avgvalue) avgvalue FROM ${tablename}  GROUP BY devid,ip,type)a
		INNER JOIN
		(SELECT ip,sensorId devid,sensor_type type,maxvalues,minvalue,avgvalue,statistictime,maxtime FROM ${tablename}  GROUP BY devid,ip,type,maxvalues)b
		ON a.ip=b.ip AND a.devid=b.devid AND a.type=b.type and a.maxvalues=b.maxvalues
		)s
		LEFT JOIN
		(SELECT a.sensorId,a.ip,a.sensor_type,a.status,COUNT(a.id) cnt FROM t_sensor_alarmreport  a
		WHERE TO_DAYS(a.starttime)=(TO_DAYS(NOW())-1)
		GROUP BY a.sensorId,a.ip,a.sensor_type,a.status) r ON r.ip=s.ip AND r.sensorId=s.devid AND r.sensor_type=s.type
		INNER JOIN 
		(SELECT a.id,c.ipaddr,a.sensorId,a.sensor_type FROM t_sensor a
		LEFT JOIN t_substation c ON a.station=c.id)f 
		ON s.ip=f.ipaddr AND s.devid=f.sensorId AND s.type=f.sensor_type
	</select>
	
	<select id="getbyclass" resultType="com.cm.entity.vo.SensorReportVo">
		SELECT f.id dev_id,a.ip,a.sensorId devid,a.sensor_type type,a.maxvalues,b.maxtime,a.avgvalue,a.minvalue,r.status,r.cnt,DATE_FORMAT(#{starttime},'%Y-%m-%d 00:00:00') filltime FROM 
		(SELECT a.ip,a.sensorId,a.sensor_type,MAX(a.maxvalues) maxvalues,MIN(a.minvalue) minvalue,AVG( a.avgvalue) avgvalue FROM
		(SELECT ip,sensorId,sensor_type,maxvalues,minvalue,avgvalue,statistictime FROM ${tablename2}
		UNION ALL
		SELECT ip,sensorId,sensor_type,maxvalues,minvalue,avgvalue,statistictime FROM ${tablename}) a
		WHERE a.statistictime&gt;#{starttime} AND a.statistictime<![CDATA[<=]]>#{endtime} GROUP BY a.ip,a.sensorId,a.sensor_type)a
		INNER JOIN
		(SELECT a.ip,a.sensorId,a.sensor_type,a.maxvalues,a.maxtime FROM
		(SELECT ip,sensorId,sensor_type,maxvalues,minvalue,avgvalue,statistictime,maxtime FROM ${tablename2}
		UNION ALL
		SELECT ip,sensorId,sensor_type,maxvalues,minvalue,avgvalue,statistictime,maxtime FROM ${tablename}) a
		WHERE a.statistictime&gt;#{starttime} AND a.statistictime<![CDATA[<=]]>#{endtime} GROUP BY a.ip,a.sensorId,a.sensor_type,a.maxvalues) b 
		ON a.ip=b.ip AND a.sensorId=b.sensorId AND a.sensor_type=b.sensor_type AND a.maxvalues=b.maxvalues
		LEFT JOIN
		(SELECT a.sensorId,a.ip,a.sensor_type,a.status,COUNT(a.id) cnt FROM t_sensor_alarmreport  a
		WHERE a.starttime&gt;#{starttime} AND a.starttime<![CDATA[<=]]>#{endtime}
		GROUP BY a.sensorId,a.ip,a.sensor_type,a.status) r ON r.ip=a.ip AND r.sensorId=a.sensorId AND r.sensor_type=a.sensor_type
		INNER JOIN 
		(SELECT a.id,c.ipaddr,a.sensorId,a.sensor_type FROM t_sensor a
		LEFT JOIN t_substation c ON a.station=c.id)f 
		ON a.ip=f.ipaddr AND a.sensorId=f.sensorId AND a.sensor_type=f.sensor_type
	</select>
	
	<insert id="addReportbyday">
		insert into t_sensor_report(ip,sensorId,type,maxvalues,minvalue,avgvalue,maxtime,alerts,powerfres,
		faults,feeabnums,remark,filltime,alerttime,powertime,faulttime,feedtime,classname,classstart,classend)
		values
		<foreach collection="list" item="s" index="index" separator=",">
		(#{s.ip},#{s.sensorId},#{s.type},#{s.maxvalues},#{s.minvalue},#{s.avgvalue},#{s.maxtime},#{s.alerts},
		#{s.powerfres},#{s.faults},#{s.feeabnums},#{s.remark},#{s.filltime},#{s.alerttime},#{s.powertime},#{s.faulttime},
		#{s.feedtime},#{s.classname},#{s.classstart},#{s.classend})
		</foreach>
		on duplicate key update maxvalues=values(maxvalues),minvalue=values(minvalue),avgvalue=values(avgvalue),
		maxtime=values(maxtime),alerts=values(alerts),powerfres=values(powerfres),faults=values(faults),feeabnums=values(feeabnums),
		alerttime=values(alerttime),powertime=values(powertime),faulttime=values(faulttime),feedtime=values(feedtime),
		classname=values(classname),classstart=values(classstart),classend=values(classend)
	</insert>
	
	
	<select id="isexisting" parameterType="com.cm.entity.SensorReport" resultType="int">
		SELECT COUNT(id) FROM t_sensor_report WHERE filltime=#{filltime}
	</select>
</mapper>